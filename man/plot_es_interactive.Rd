% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_es.R
\name{plot_es_interactive}
\alias{plot_es_interactive}
\title{Interactive plot of event-study results with dynamic CI switching}
\usage{
plot_es_interactive(
  data,
  conf.level = 0.95,
  display_type = "ribbon",
  theme = "bw",
  color = "#B25D91FF",
  fill = "#B25D91FF",
  alpha = 0.2,
  linewidth = 1,
  pointsize = 2
)
}
\arguments{
\item{data}{An object of class \code{es_result} returned by \code{run_es()}.}

\item{conf.level}{Initial confidence level to display (default 0.95).}

\item{display_type}{One of \code{"ribbon"} (default) or \code{"errorbar"}.}

\item{theme}{One of \code{"bw"}, \code{"minimal"}, or \code{"classic"}.}

\item{color}{Line and point color (default \code{"#B25D91FF"}).}

\item{fill}{Ribbon fill color (default \code{"#B25D91FF"}).}

\item{alpha}{Ribbon transparency (default 0.2).}

\item{linewidth}{Line width for estimates (default 1).}

\item{pointsize}{Point size for estimates (default 2).}
}
\value{
A \code{plotly} object.
}
\description{
Creates an interactive plotly visualization of event study results with
dynamic confidence interval switching via buttons. Supports hover tooltips,
zoom/pan, and toggleable legends.
}
\details{
This function creates an interactive plotly plot with the following features:
\itemize{
  \item \strong{Dynamic CI switching:} Buttons allow switching between 90%, 95%, and 99% confidence intervals
  \item \strong{Hover tooltips:} Display relative time, estimate, CI bounds, p-value, and sample size
  \item \strong{Zoom and pan:} Built-in plotly interactivity
  \item \strong{Legend toggle:} Click legend items to show/hide
}

If not all confidence interval levels (90%, 95%, 99%) are present in the data,
a warning is issued and only available levels are displayed. To enable full
functionality, run \code{run_es()} with \code{conf.level = c(0.90, 0.95, 0.99)}.
}
\examples{
\dontrun{
# Basic usage (requires multiple CI levels)
res <- run_es(data, outcome = y, treatment = d, time = t,
              timing = 2010, fe = ~ id)
plot_es_interactive(res)

# With errorbar display
plot_es_interactive(res, display_type = "errorbar")

# Start with 90\% CI
plot_es_interactive(res, conf.level = 0.90)

# Custom styling
plot_es_interactive(res, theme = "minimal", color = "#E64B35")
}
}
